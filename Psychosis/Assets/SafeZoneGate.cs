using System.Collections;
using UnityEngine;

public class SafeZoneGate : MonoBehaviour
{
    public Transform gate; // ?????? ?? ?????? (????????, ??????, ??????? ????? ????????? ?????/????)
    public float openSpeed = 2f; // ???????? ????????/????????
    public float openHeight = 5f; // ??????, ?? ??????? ?????? ??????????? ??? ????????

    public Vector3 closedPosition;
    public Vector3 openPosition;

    private GateState currentState;
    private GameManager gameManager;

    private enum GateState
    {
        Closed,      // ?????? ???????
        Opening,     // ?????? ???????????
        Open,        // ?????? ???????
        Closing      // ?????? ???????????
    }

    private void Awake()
    {
        gameManager = FindObjectOfType<GameManager>();
        closedPosition = gate.position;
        openPosition = closedPosition + Vector3.up * openHeight;

        // ?????????? ?????? ???????
        SetState(GateState.Closed);
    }

    private void Update()
    {
        // ????????? ?????? ? ??????????? ?? ???????? ????????? ?????
        switch (currentState)
        {
            case GateState.Opening:
                MoveGate(openPosition, GateState.Open);
                break;
            case GateState.Closing:
                MoveGate(closedPosition, GateState.Closed);
                break;
        }
    }

    /// <summary>
    /// ????????????? ????? ????????? ?????.
    /// </summary>
    private void SetState(GateState newState)
    {
        currentState = newState;
    }

    /// <summary>
    /// ????????? ??????.
    /// </summary>
    public void OpenGate()
    {
        if (currentState == GateState.Closed || currentState == GateState.Closing)
        {
            SetState(GateState.Opening);
        }
    }

    /// <summary>
    /// ????????? ??????.
    /// </summary>
    public void CloseGate()
    {
        if (currentState == GateState.Open || currentState == GateState.Opening)
        {
            SetState(GateState.Closing);
        }
    }

    /// <summary>
    /// ???????? ????? ?? ???????? ???????.
    /// </summary>
    private void MoveGate(Vector3 targetPosition, GateState nextState)
    {
        gate.position = Vector3.MoveTowards(gate.position, targetPosition, openSpeed * Time.deltaTime);

        if (Vector3.Distance(gate.position, targetPosition) < 0.01f)
        {
            SetState(nextState);
        }
    }

    /// <summary>
    /// ?????????, ????????? ?? ?????? ? ???????? ?????????.
    /// </summary>
    public bool IsGateOpen()
    {
        return currentState == GateState.Open;
    }

    /// <summary>
    /// ?????????, ????????? ?? ?????? ? ???????? ?????????.
    /// </summary>
    public bool IsGateClosed()
    {
        return currentState == GateState.Closed;
    }
}
